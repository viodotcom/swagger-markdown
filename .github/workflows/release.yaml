name: Release

env:
  GOCOVMODE: atomic

on:
  push:
    tags:
      - v*
    branches:
      - master

  pull_request:

permissions:
  contents: write
  pull-requests: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1"
          check-latest: true
          cache: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2
          only-new-issues: true

  publish_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1"
          check-latest: true
          cache: true

      - name: Install Tools
        run: |
          go install github.com/aktau/github-release@latest
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest

      - name: Build release
        run: |
          set -x
          rm -rf dist
          mkdir -p dist/bin
          mkdir -p dist/build

          build_binary() {
            out="swagger-markdown_$1_$2"
            if [[ $1 == "windows" ]]; then
              out="${out}.exe"
            fi
            GOOS=$1 GOARCH=$2 CGO_ENABLED=0 go build -o "./dist/bin/$out" .
          }

          go mod download

          build_binary linux amd64
          build_binary linux arm64
          build_binary linux arm
          build_binary linux ppc64le
          build_binary darwin amd64
          build_binary darwin arm64
          build_binary windows amd64
          build_binary windows arm64

          nfpm p -p deb -t dist/build
          nfpm p -p rpm -t dist/build

          pushd dist/bin || exit 1
          sha1sum * > sha1sum.txt
          sha256sum * > sha256sum.txt
          popd || exit 1


      - name: Publish Binaries
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: dist/bin/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
